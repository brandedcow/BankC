DROP TABLE P1.CUSTOMER;
DROP TABLE P1.ACCOUNT;
DROP VIEW V_TOTAL_BALANCE;

CREATE TABLE P1.CUSTOMER ( ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 INCREMENT BY 1 NO CACHE ) PRIMARY KEY, NAME VARCHAR(15) NOT NULL, GENDER CHAR(1) NOT NULL, AGE INTEGER NOT NULL, PIN INTEGER NOT NULL);
ALTER TABLE P1.CUSTOMER ADD CONSTRAINT GENDERCONSTRAINT CHECK ( GENDER='M' OR GENDER ='F' ) ENFORCED;
ALTER TABLE P1.CUSTOMER ADD CONSTRAINT AGECONSTRAINT CHECK ( AGE >= 0 ) ENFORCED;
ALTER TABLE P1.CUSTOMER ADD CONSTRAINT PINCONSTRAINT CHECK ( PIN >= 0 ) ENFORCED;

CREATE TABLE P1.ACCOUNT (
NUMBER INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1000 INCREMENT BY 1 NO CACHE ) PRIMARY KEY,
ID INTEGER NOT NULL,
BALANCE INTEGER NOT NULL,
TYPE CHAR NOT NULL,
STATUS CHAR NOT NULL,
	FOREIGN KEY CUSTOMER_ID (ID) REFERENCES P1.CUSTOMER ON DELETE NO ACTION
);

ALTER TABLE P1.ACCOUNT ADD CONSTRAINT BALANCECONSTRAINT CHECK ( BALANCE >= 0 ) ENFORCED;
ALTER TABLE P1.ACCOUNT ADD CONSTRAINT TYPECONSTRAINT CHECK ( TYPE='C' OR TYPE='S') ENFORCED;
ALTER TABLE P1.ACCOUNT ADD CONSTRAINT STATUSCONSTRAINT CHECK ( STATUS='A' OR STATUS='I') ENFORCED;
ALTER TABLE P1.ACCOUNT ALTER COLUMN STATUS SET DEFAULT 'A';

CREATE VIEW V_TOTAL_BALANCE AS SELECT DISTINCT P1.CUSTOMER.ID, P1.CUSTOMER.NAME, P1.CUSTOMER.AGE, P1.CUSTOMER.GENDER, (SELECT COALESCE(SUM(BALANCE),0) AS TOTAL FROM P1.ACCOUNT WHERE (ID = P1.CUSTOMER.ID AND STATUS='A') ) AS BALANCE FROM P1.CUSTOMER LEFT JOIN P1.ACCOUNT ON P1.CUSTOMER.ID = P1.ACCOUNT.ID GROUP BY P1.CUSTOMER.ID, P1.CUSTOMER.NAME, P1.CUSTOMER.AGE, P1.CUSTOMER.GENDER;
